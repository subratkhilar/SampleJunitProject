spring.profiles.active=dev
server.port=9999

#server.port=ENV['PORT']

#server.port= $port
server.context-path=/Codex-IOT-rest-api
spring.mvc.favicon.enabled=true

# Database
jdbc.driver: org.postgresql.Driver
jdbc.url: jdbc:postgresql://localhost:5432/Codex_IoT_POV
jdbc.username: postgres
jdbc.password: postgres

# Hibernate
#hibernate.dialect: org.hibernate.dialect.PostgreSQL82Dialect
hibernate.dialect:  org.hibernate.dialect.PostgreSQLDialect
hibernate.show_sql: true
hibernate.hbm2ddl.auto: update
entitymanager.packagesToScan: net.atos.Codex_IOT
#spring.datasource.schema= operationdb


#Vcap Service

spring.datasource.username = ${vcap.services.postgres_vm.credentials.username:postgres}
spring.datasource.password = ${vcap.services.postgres_vm.credentials.password:postgres}
#spring.datasource.dbname = ${vcap.services.postgres_vm.credentials.dbname:Codex_IoT}
spring.datasource.dbname = ${vcap.services.postgres_vm.credentials.dbname:Codex_IoT_POV}
spring.datasource.port=${vcap.services.postgres_vm.credentials.port:5432}
spring.datasource.host= ${vcap.services.postgres_vm.credentials.host:localhost}

spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#Cassandra config
#spring.data.cassandra.contact-points = ${vcap.services.cassandra_vm.credentials.host:127.0.0.1} 
#spring.data.cassandra.port = ${vcap.services.cassandra_vm.credentials.port:9042}
#spring.data.cassandra.keyspace-name= codexiot

#AUTH_SERVER_URI = http://localhost:8080/cloudfoundry-identity-uaa-3.9.1/oauth/token?grant_type=password&
#AUTH_SERVER_URI= http://iotuaa1.apps.eu01.cf.canopy-cloud.com/oauth/token?grant_type=password&
AUTH_SERVER_URI= http://iot-uaa.apps.eu01.cf.canopy-cloud.com/oauth/token?grant_type=password&